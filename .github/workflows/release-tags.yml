name: Release New Tags

on:
  push:
    tags:
      - 'v*' # Any pushed tag

jobs:
  build:
    name: Create Release

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]
        node-version: [18]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install

    - run: npm run load:content

    - run: npm run lint

    - run: npm run build

    - uses: pCYSl5EDgo/cat@master
      id: loadChangelog
      with:
        path: CHANGELOG-current.md

    - name: Create Release
      id: createRelease
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.loadChangelog.outputs.text }}
        draft: false
        prerelease: false

    - name: Output Release URL File
      run: echo "${{ steps.createRelease.outputs.upload_url }}" > release_url.txt

    - name: Save Release URL File for Publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  publish-windows:
    needs: [build]
    name: Create Windows Binary

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        node-version: [18]

    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - uses: little-core-labs/get-git-tag@v3.0.1
      id: loadTagName

    - uses: pCYSl5EDgo/cat@master
      id: loadReleaseUrl
      with:
        path: release_url/release_url.txt

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install

    - run: cd electron && npm install

    - run: npm run load:content

    - run: npm run lint

    - run: npm run build:electron

    - name: Upload Binary
      id: uploadReleaseAsset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.loadReleaseUrl.outputs.text }}
        asset_path: ./electron/out/make/squirrel.windows/x64/WorldSeller.exe
        asset_name: WorldSeller.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - uses: manleydev/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_API_KEY }}
        CHANNEL: windows
        ITCH_GAME: world-seller
        ITCH_USER: seiyria
        PACKAGE: ./electron/out/make/squirrel.windows/x64/World Seller.exe
        VERSION: ${{ steps.loadTagName.outputs.tag }}

  publish-linux:
    needs: [build]
    name: Create Linux Binary

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18]

    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - uses: little-core-labs/get-git-tag@v3.0.1
      id: loadTagName

    - uses: pCYSl5EDgo/cat@master
      id: loadReleaseUrl
      with:
        path: release_url/release_url.txt

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install

    - run: cd electron && npm install

    - run: npm run load:content

    - run: npm run lint

    - run: npm run build:electron

    - name: Upload Binary
      id: uploadReleaseAsset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.loadReleaseUrl.outputs.text }}
        asset_path: ./electron/out/make/zip/linux/x64/WorldSeller.zip
        asset_name: WorldSeller-linux.zip
        asset_content_type: application/zip

    - uses: manleydev/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_API_KEY }}
        CHANNEL: linux
        ITCH_GAME: world-seller
        ITCH_USER: seiyria
        PACKAGE: ./electron/out/make/zip/linux/x64/WorldSeller.zip
        VERSION: ${{ steps.loadTagName.outputs.tag }}

  publish-macos:
    needs: [build]
    name: Create Mac OS Binary

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]
        node-version: [18]

    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - uses: little-core-labs/get-git-tag@v3.0.1
      id: loadTagName

    - uses: pCYSl5EDgo/cat@master
      id: loadReleaseUrl
      with:
        path: release_url/release_url.txt

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install

    - run: cd electron && npm install

    - run: npm run load:content

    - run: npm run lint

    - run: npm run build:electron

    - name: Upload Binary
      id: uploadReleaseAsset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.loadReleaseUrl.outputs.text }}
        asset_path: ./electron/out/make/zip/darwin/arm64/WorldSeller.zip
        asset_name: WorldSeller-macos.zip
        asset_content_type: application/zip

    - uses: manleydev/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_API_KEY }}
        CHANNEL: osx
        ITCH_GAME: world-seller
        ITCH_USER: seiyria
        PACKAGE: ./electron/out/make/zip/darwin/arm64/WorldSeller.zip
        VERSION: ${{ steps.loadTagName.outputs.tag }}
